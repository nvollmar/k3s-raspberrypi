---

- name: "Create loki service account"
  k8s:
    state: present
    definition:
      apiVersion: v1
      kind: ServiceAccount
      metadata:
        name: loki
        namespace: monitoring
        labels:
          app: loki

- name: "Create loki configuration"
  k8s:
    state: present
    definition:
      apiVersion: v1
      kind: ConfigMap
      metadata:
        name: loki-config
        namespace: monitoring
        labels:
          app: loki
      data:
        loki.yaml: |-
          auth_enabled: false
          server:
            grpc_listen_port: 9095
            http_listen_port: 3100
            http_server_read_timeout: 2m
            http_server_write_timeout: 2m
          
          analytics:
            reporting_enabled: false
          
          chunk_store_config:
            max_look_back_period: 0s
          
          compactor:
            shared_store: filesystem
            working_directory: /data/loki/boltdb-shipper-compactor
          
          ingester:
            chunk_block_size: 262144
            chunk_idle_period: 3m
            chunk_retain_period: 1m
            max_transfer_retries: 0
            lifecycler:
              ring:
                replication_factor: 1
            wal:
              dir: /data/loki/wal
          
          querier:
            max_concurrent: 25
            query_timeout: 2m
            engine:
              timeout: 2m
          
          limits_config:
            enforce_metric_name: false
            max_entries_limit_per_query: 5000
            reject_old_samples: true
            reject_old_samples_max_age: 168h
            split_queries_by_interval: 1h
          
          memberlist:
            join_members:
            - 'loki-memberlist'
          
          schema_config:
            configs:
            - from: "2022-10-18"
              index:
                period: 24h
                prefix: index_
              store: boltdb-shipper
              object_store: filesystem
              schema: v11
          
          storage_config:
            boltdb_shipper:
              active_index_directory: /data/loki/boltdb-shipper-active
              cache_location: /data/loki/boltdb-shipper-cache
              cache_ttl: 24h
              shared_store: filesystem
            filesystem:
              directory: /data/loki/chunks
          
          table_manager:
            retention_deletes_enabled: false
            retention_period: 0s

- name: "Create loki stateful set"
  k8s:
    state: present
    definition:
      apiVersion: apps/v1
      kind: StatefulSet
      metadata:
        name: loki
        namespace: monitoring
        labels:
          app: loki
      spec:
        replicas: 1
        podManagementPolicy: OrderedReady
        updateStrategy:
          type: RollingUpdate
        selector:
          matchLabels:
            app: loki
        template:
          metadata:
            labels:
              app: loki
            annotations:
              prometheus.io/port: "3100"
              prometheus.io/scrape: "true"
          spec:
            restartPolicy: Always
            securityContext:
              fsGroup: 10001
              runAsGroup: 10001
              runAsNonRoot: true
              runAsUser: 10001
            serviceAccount: loki
            serviceAccountName: loki
            terminationGracePeriodSeconds: 4800
            containers:
              - name: loki
                image: "grafana/loki:{{ loki_image_tag }}"
                imagePullPolicy: IfNotPresent
                args: ['-config.file=/etc/loki/loki.yaml']
                livenessProbe:
                  failureThreshold: 3
                  httpGet:
                    path: /ready
                    port: http-metrics
                    scheme: HTTP
                  initialDelaySeconds: 45
                  periodSeconds: 10
                  successThreshold: 1
                  timeoutSeconds: 1
                readinessProbe:
                  failureThreshold: 3
                  httpGet:
                    path: /ready
                    port: http-metrics
                    scheme: HTTP
                  initialDelaySeconds: 45
                  periodSeconds: 10
                  successThreshold: 1
                  timeoutSeconds: 1
                resources:
                  limits:
                    cpu: 2000m
                    memory: 2Gi
                  requests:
                    cpu: 200m
                    memory: 512Mi
                ports:
                  - containerPort: 3100
                    name: http-metrics
                    protocol: TCP
                  - containerPort: 9095
                    name: grpc
                    protocol: TCP
                  - containerPort: 7946
                    name: memberlist-port
                    protocol: TCP
                securityContext:
                  readOnlyRootFilesystem: true
                terminationMessagePath: /dev/termination-log
                terminationMessagePolicy: File
                volumeMounts:
                  - mountPath: /etc/loki
                    name: loki-config
                    readOnly: true
                  - mountPath: /data
                    name: loki-storage
                  - mountPath: /tmp
                    name: tmp
            nodeSelector:
              kubernetes.io/hostname: k3s-worker-0
            volumes:
              - emptyDir: { }
                name: tmp
              - name: loki-config
                configMap:
                  defaultMode: 420
                  name: loki-config
        volumeClaimTemplates:
        - apiVersion: v1
          kind: PersistentVolumeClaim
          metadata:
            name: loki-storage
          spec:
            accessModes:
              - ReadWriteOnce
            resources:
              requests:
                storage: 9G
            storageClassName: local-storage
            volumeMode: Filesystem

- name: "Create loki discovery service"
  k8s:
    state: present
    definition:
      apiVersion: v1
      kind: Service
      metadata:
        name: loki-discovery
        namespace: monitoring
        labels:
          app: loki
      spec:
        type: ClusterIP
        selector:
          app: loki
        ports:
          - name: http-metrics
            port: 3100
            protocol: TCP
            targetPort: http-metrics

- name: "Create loki memberlist service"
  k8s:
    state: present
    definition:
      apiVersion: v1
      kind: Service
      metadata:
        name: loki-memberlist
        namespace: monitoring
        labels:
          app: loki
      spec:
        type: ClusterIP
        selector:
          app: loki
        ports:
          - name: http
            port: 7946
            protocol: TCP
            targetPort: memberlist-port