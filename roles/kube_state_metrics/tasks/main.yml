---
# from https://github.com/kubernetes/kube-state-metrics/tree/master/examples/standard

- name: "Create kube state metrics cluster role binding"
  k8s:
    state: present
    definition:
      apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRoleBinding
      metadata:
        name: kube-state-metrics
        labels:
          app.kubernetes.io/component: exporter
          app.kubernetes.io/name: kube-state-metrics
          app.kubernetes.io/version: "{{ kube_state_metrics_image_tag }}"
      roleRef:
        apiGroup: rbac.authorization.k8s.io
        kind: ClusterRole
        name: kube-state-metrics
      subjects:
        - kind: ServiceAccount
          name: kube-state-metrics
          namespace: kube-system

- name: "Create kube state metrics cluster role"
  k8s:
    state: present
    definition:
      apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRole
      metadata:
        name: kube-state-metrics
        labels:
          app.kubernetes.io/component: exporter
          app.kubernetes.io/name: kube-state-metrics
          app.kubernetes.io/version: "{{ kube_state_metrics_image_tag }}"
      rules:
        - apiGroups:
            - ""
          resources:
            - configmaps
            - secrets
            - nodes
            - pods
            - services
            - serviceaccounts
            - resourcequotas
            - replicationcontrollers
            - limitranges
            - persistentvolumeclaims
            - persistentvolumes
            - namespaces
            - endpoints
          verbs:
            - list
            - watch
        - apiGroups:
            - apps
          resources:
            - statefulsets
            - daemonsets
            - deployments
            - replicasets
          verbs:
            - list
            - watch
        - apiGroups:
            - batch
          resources:
            - cronjobs
            - jobs
          verbs:
            - list
            - watch
        - apiGroups:
            - autoscaling
          resources:
            - horizontalpodautoscalers
          verbs:
            - list
            - watch
        - apiGroups:
            - authentication.k8s.io
          resources:
            - tokenreviews
          verbs:
            - create
        - apiGroups:
            - authorization.k8s.io
          resources:
            - subjectaccessreviews
          verbs:
            - create
        - apiGroups:
            - policy
          resources:
            - poddisruptionbudgets
          verbs:
            - list
            - watch
        - apiGroups:
            - certificates.k8s.io
          resources:
            - certificatesigningrequests
          verbs:
            - list
            - watch
        - apiGroups:
            - storage.k8s.io
          resources:
            - storageclasses
            - volumeattachments
          verbs:
            - list
            - watch
        - apiGroups:
            - admissionregistration.k8s.io
          resources:
            - mutatingwebhookconfigurations
            - validatingwebhookconfigurations
          verbs:
            - list
            - watch
        - apiGroups:
            - networking.k8s.io
          resources:
            - networkpolicies
            - ingresses
          verbs:
            - list
            - watch
        - apiGroups:
            - coordination.k8s.io
          resources:
            - leases
          verbs:
            - list
            - watch
        - apiGroups:
            - rbac.authorization.k8s.io
          resources:
            - clusterrolebindings
            - clusterroles
            - rolebindings
            - roles
          verbs:
            - list
            - watch

- name: "Create kube state metrics service account"
  k8s:
    state: present
    definition:
      apiVersion: v1
      automountServiceAccountToken: true
      kind: ServiceAccount
      metadata:
        name: kube-state-metrics
        namespace: kube-system
        labels:
          app.kubernetes.io/component: exporter
          app.kubernetes.io/name: kube-state-metrics
          app.kubernetes.io/version: "{{ kube_state_metrics_image_tag }}"

- name: "Create kube state metrics service"
  k8s:
    state: present
    definition:
      apiVersion: v1
      kind: Service
      metadata:
        name: kube-state-metrics
        namespace: kube-system
        labels:
          app.kubernetes.io/component: exporter
          app.kubernetes.io/name: kube-state-metrics
          app.kubernetes.io/version: "{{ kube_state_metrics_image_tag }}"
      spec:
        clusterIP: None
        ports:
          - name: http-metrics
            port: 8080
            targetPort: http-metrics
          - name: telemetry
            port: 8081
            targetPort: telemetry
        selector:
          app.kubernetes.io/name: kube-state-metrics

- name: "Create kube state metrics deployment"
  k8s:
    state: present
    definition:
      apiVersion: apps/v1
      kind: Deployment
      metadata:
        name: kube-state-metrics
        namespace: kube-system
        labels:
          app.kubernetes.io/component: exporter
          app.kubernetes.io/name: kube-state-metrics
          app.kubernetes.io/version: "{{ kube_state_metrics_image_tag }}"
      spec:
        replicas: 1
        selector:
          matchLabels:
            app.kubernetes.io/name: kube-state-metrics
        template:
          metadata:
            labels:
              app.kubernetes.io/component: exporter
              app.kubernetes.io/name: kube-state-metrics
              app.kubernetes.io/version: "{{ kube_state_metrics_image_tag }}"
          spec:
            automountServiceAccountToken: true
            containers:
              - image: "registry.k8s.io/kube-state-metrics/kube-state-metrics:v{{ kube_state_metrics_image_tag }}"
                livenessProbe:
                  httpGet:
                    path: /healthz
                    port: 8080
                  initialDelaySeconds: 5
                  timeoutSeconds: 5
                name: kube-state-metrics
                ports:
                  - containerPort: 8080
                    name: http-metrics
                  - containerPort: 8081
                    name: telemetry
                readinessProbe:
                  httpGet:
                    path: /
                    port: 8081
                  initialDelaySeconds: 5
                  timeoutSeconds: 5
                securityContext:
                  allowPrivilegeEscalation: false
                  capabilities:
                    drop:
                      - ALL
                  readOnlyRootFilesystem: true
                  runAsUser: 65534
            nodeSelector:
              kubernetes.io/os: linux
            serviceAccountName: kube-state-metrics
