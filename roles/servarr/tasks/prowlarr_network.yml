---

- name: "Create egress network policy for dns"
  k8s:
    state: present
    definition:
      kind: NetworkPolicy
      apiVersion: networking.k8s.io/v1
      metadata:
        name: prowlarr-dns-out
        namespace: apps
        labels:
          app: prowlarr
          context: dns
      spec:
        podSelector:
          matchLabels:
            app: prowlarr
        egress:
          - to:
              - namespaceSelector:
                  matchLabels:
                    kubernetes.io/metadata.name: kube-system
            ports:
              - protocol: TCP
                port: 53
              - protocol: UDP
                port: 53

- name: "Create egress network policy for internet"
  k8s:
    state: present
    definition:
      kind: NetworkPolicy
      apiVersion: networking.k8s.io/v1
      metadata:
        name: prowlarr-internet-out
        namespace: apps
        labels:
          app: prowlarr
          context: internet
      spec:
        podSelector:
          matchLabels:
            app: prowlarr
        egress:
          - to:
              - ipBlock:
                  cidr: 0.0.0.0/0
                  except:
                    - 10.0.0.0/8
                    - 192.168.0.0/16
                    - 172.16.0.0/20

- name: "Create egress network policy for transmission"
  k8s:
    state: present
    definition:
      kind: NetworkPolicy
      apiVersion: networking.k8s.io/v1
      metadata:
        name: prowlarr-transmission-out
        namespace: apps
        labels:
          app: prowlarr
          context: transmission
      spec:
        podSelector:
          matchLabels:
            app: prowlarr
        egress:
          - to:
              - ipBlock:
                  cidr: "{{ transmission_ip }}/32"
            ports:
              - name: api
                port: 9091

- name: "Create ingress network policy for scraping"
  k8s:
    state: present
    definition:
      kind: NetworkPolicy
      apiVersion: networking.k8s.io/v1
      metadata:
        name: prowlarr-scrape-in
        namespace: apps
        labels:
          app: prometheus
          context: scraping
      spec:
        podSelector:
          matchLabels:
            app: prowlarr
        ingress:
          - from:
              - namespaceSelector:
                  matchLabels:
                    kubernetes.io/metadata.name: monitoring
                podSelector:
                  matchLabels:
                    prometheus: monitoring
            ports:
              - protocol: TCP
                port: 9793


- name: "Create ingress network policy for radarr"
  k8s:
    state: present
    definition:
      kind: NetworkPolicy
      apiVersion: networking.k8s.io/v1
      metadata:
        name: radarr-prowlarr-in
        namespace: apps
        labels:
          app: radarr
          context: prowlarr
      spec:
        podSelector:
          matchLabels:
            app: prowlarr
        ingress:
          - from:
              - podSelector:
                  matchLabels:
                    app: radarr
            ports:
              - protocol: TCP
                port: 9696

- name: "Create egress network policy to radarr"
  k8s:
    state: present
    definition:
      kind: NetworkPolicy
      apiVersion: networking.k8s.io/v1
      metadata:
        name: prowlarr-radarr-out
        namespace: apps
        labels:
          app: prowlarr
          context: radarr
      spec:
        podSelector:
          matchLabels:
            app: prowlarr
        egress:
          - to:
              - podSelector:
                  matchLabels:
                    app: radarr
            ports:
              - protocol: TCP
                port: 7878


- name: "Create ingress network policy for sonarr"
  k8s:
    state: present
    definition:
      kind: NetworkPolicy
      apiVersion: networking.k8s.io/v1
      metadata:
        name: sonarr-prowlarr-in
        namespace: apps
        labels:
          app: sonarr
          context: prowlarr
      spec:
        podSelector:
          matchLabels:
            app: prowlarr
        ingress:
          - from:
              - podSelector:
                  matchLabels:
                    app: sonarr
            ports:
              - protocol: TCP
                port: 9696

- name: "Create egress network policy to sonarr"
  k8s:
    state: present
    definition:
      kind: NetworkPolicy
      apiVersion: networking.k8s.io/v1
      metadata:
        name: prowlarr-sonarr-out
        namespace: apps
        labels:
          app: prowlarr
          context: sonarr
      spec:
        podSelector:
          matchLabels:
            app: prowlarr
        egress:
          - to:
              - podSelector:
                  matchLabels:
                    app: sonarr
            ports:
              - protocol: TCP
                port: 8989


- name: "Create ingress network policy for lidarr"
  k8s:
    state: present
    definition:
      kind: NetworkPolicy
      apiVersion: networking.k8s.io/v1
      metadata:
        name: lidarr-prowlarr-in
        namespace: apps
        labels:
          app: lidarr
          context: prowlarr
      spec:
        podSelector:
          matchLabels:
            app: prowlarr
        ingress:
          - from:
              - podSelector:
                  matchLabels:
                    app: lidarr
            ports:
              - protocol: TCP
                port: 9696

- name: "Create egress network policy to lidarr"
  k8s:
    state: present
    definition:
      kind: NetworkPolicy
      apiVersion: networking.k8s.io/v1
      metadata:
        name: prowlarr-lidarr-out
        namespace: apps
        labels:
          app: prowlarr
          context: lidarr
      spec:
        podSelector:
          matchLabels:
            app: prowlarr
        egress:
          - to:
              - podSelector:
                  matchLabels:
                    app: lidarr
            ports:
              - protocol: TCP
                port: 8686


- name: "Create ingress network policy for readarr"
  k8s:
    state: present
    definition:
      kind: NetworkPolicy
      apiVersion: networking.k8s.io/v1
      metadata:
        name: readarr-prowlarr-in
        namespace: apps
        labels:
          app: readarr
          context: prowlarr
      spec:
        podSelector:
          matchLabels:
            app: prowlarr
        ingress:
          - from:
              - podSelector:
                  matchLabels:
                    app: readarr
            ports:
              - protocol: TCP
                port: 9696

- name: "Create egress network policy to lidarr"
  k8s:
    state: present
    definition:
      kind: NetworkPolicy
      apiVersion: networking.k8s.io/v1
      metadata:
        name: prowlarr-readarr-out
        namespace: apps
        labels:
          app: prowlarr
          context: readarr
      spec:
        podSelector:
          matchLabels:
            app: prowlarr
        egress:
          - to:
              - podSelector:
                  matchLabels:
                    app: readarr
            ports:
              - protocol: TCP
                port: 8787